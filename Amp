--{{ Variables }}--
------------------------------------------------------------

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local player = Players.LocalPlayer
local character = player.Character
local humanoid = character:FindFirstChild("Humanoid")

local tool = player:FindFirstChildOfClass("Tool") or character:FindFirstChildOfClass("Tool")
local Handle = tool and tool:FindFirstChild("Handle")

------------------------------------------------------------



--{{ Misc }}--
------------------------------------------------------------

local DamageX = 2 -- amount of damage being dealt

local length = 2 -- line reach

local size = 0.1 -- Visualizer Thickness

------------------------------------------------------------



--{{ RayVisualizer }}--
------------------------------------------------------------
local RayVisual = Instance.new("Part", Handle)
RayVisual.Anchored = true
RayVisual.CanCollide = false
RayVisual.CastShadow = false
RayVisual.Color = Color3.fromRGB(255, 0, 0)
RayVisual.Transparency = 0
RayVisual.Material = Enum.Material.Neon
------------------------------------------------------------



--{{ Script }}--
------------------------------------------------------------

local function Whitelist()
	
	local Touched = {} -- list of parts touching your hitbox
	
	for _, p in pairs(Players:GetPlayers()) do
		if p.Name ~= player.Name then
			
			local pchar = p.Character
			
			if pchar then
				for _, child in pairs(pchar:GetChildren()) do
					if child:IsA("BasePart") then
						table.insert(Touched, child)
					end
				end
			end
		end
	end
	return Touched
end



local Amp = RunService.Heartbeat:Connect(function()
	
	local tool = player:FindFirstChildOfClass("Tool") or character:FindFirstChildOfClass("Tool")
	local Handle = tool and tool:FindFirstChild("Handle")


	local origin = Handle.CFrame.Position
	local direction = Handle.CFrame.ZVector * length
	local midpoint = origin + direction / 2



	local ray = Ray.new(origin, direction)


	RayVisual.Size = Vector3.new(size, size, direction.Magnitude)
	RayVisual.CFrame = CFrame.new(midpoint, origin)

	local hit, position = workspace:FindPartOnRayWithWhitelist(ray, Whitelist())

	if hit then
		print(hit.name.. " was hit")

	end
	
end)



--[[local DeathCheck = RunService.Heartbeat:Connect(function()
	if humanoid then
		if humanoid.Health <= 0 then
			Amp:Disconnect()
			
		elseif humanoid.Health > 0 then
			local Amp = RunService.Heartbeat:Connect(function()
				
				local Players = game:GetService("Players")
				local player = Players.LocalPlayer
				local character = player.Character
				
				local tool = player:FindFirstChildOfClass("Tool") or character:FindFirstChildOfClass("Tool")
				local Handle = tool and tool:FindFirstChild("Handle")


				local origin = Handle.CFrame.Position
				local direction = Handle.CFrame.ZVector * length
				local midpoint = origin + direction / 2



				local ray = Ray.new(origin, direction)


				RayVisual.Size = Vector3.new(size, size, direction.Magnitude)
				RayVisual.CFrame = CFrame.new(midpoint, origin)

				local hit, position = workspace:FindPartOnRayWithWhitelist(ray, Whitelist())

				if hit then
					print(hit.name.. " was hit")

				end

			end)
		end
	end
end)]]

------------------------------------------------------------


--[[

main issue: raycast filtering, error: expected table argument on line 72 --

2nd issue: stops working on character reset, error: attempt to index nil with CFrame on line 59

3rd issue: only works when sword is held out, error: attempt to index nil with CFrame on line 59 --

]]
